)
r <- list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est",
full.names = T
) %>% lapply(rast)
r
r <- list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca",
full.names = T
) %>% lapply(rast)
r
list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca"
)
list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca"
) %>%
str_split("_")
list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca"
) %>%
str_split("_") %>%
lapply(pluck, length(.))
list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca"
) %>%
str_split("_") %>%
lapply(pluck, length(.[[1]]))
r <- list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca"
) %>%
str_split("_") %>%
lapply(pluck, length(.[[1]])) %>%
unlist(use.names = F) %>%
lapply(substr, 1, nchar(.) - 4)
r <- list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca",
full.names = T
) %>% lapply(rast)
a <- list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca"
) %>%
str_split("_") %>%
lapply(pluck, length(.[[1]])) %>%
unlist(use.names = F) %>%
lapply(substr, 1, nchar(.) - 4)
a
a <- list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca"
) %>%
str_split("_") %>%
lapply(pluck, length(.[[1]])) %>%
unlist(use.names = F) %>%
lapply(\(x) substr(x, 1, nchar(x) - 4))
a
a <- list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca"
) %>%
str_split("_") %>%
lapply(pluck, length(.[[1]])) %>%
lapply(\(x) substr(x, 1, nchar(x) - 4)) %>%
unlist(use.names = F)
a
r <- list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca",
full.names = T
) %>% lapply(rast)
names(r) <- list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca"
) %>%
str_split("_") %>%
lapply(pluck, length(.[[1]])) %>%
lapply(\(x) substr(x, 1, nchar(x) - 4)) %>%
unlist(use.names = F)
r
x11(); plot(r$current)
r
nisl <- "GLP"
# chargement des éléments du graphe
isl          <- maps[[nisl]]
e            <- ext(climatologies[[nisl]])
sr_crop      <- terra::crop(sr, e)
r
rl <- list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca",
full.names = T
) %>% lapply(rast)
names(rl) <- list.files(
here("data", "tidy", "bootstrap_species_richness"),
pattern = "est.+ca"
) %>%
str_split("_") %>%
lapply(pluck, length(.[[1]])) %>%
lapply(\(x) substr(x, 1, nchar(x) - 4)) %>%
unlist(use.names = F)
ps
sr <- rl$current
# chargement des éléments du graphe
isl          <- maps[[nisl]]
e            <- ext(climatologies[[nisl]])
sr_crop      <- terra::crop(sr, e)
tb           <- as.data.frame(sr_crop, xy = T)
names(tb)[3] <- "value"
occ <- bio %>%
filter(individualCount > 0) %>%
st_crop(as.vector(e)[c(1,3,2,4)])
isl
tb           <- as.data.frame(sr_crop, xy = T)
tb
head(tb)
nval <- switch(
value,
init = "Richesse\nspécifique\(modélisée)",
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
value <- tb$init
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
names(tb[, 3:ncol(tb)])
value <- "init"
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
nval
cat(value)
cat(nval)
apply(names(tb[, 3:ncol(tb)]), 2, \(value) {
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(data = tb, aes(x = x, y = y, fill = get(value))) +
geom_sf(data = isl) +
scale_fill_viridis_c() +
labs(x = "Longitude", y = "Latitude") +
guides(fill = guide_colorbar(nval))
})
a <- Sapply(
names(tb[, 3:ncol(tb)]),
\(value) {
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(data = tb, aes(x = x, y = y, fill = get(value))) +
geom_sf(data = isl) +
scale_fill_viridis_c() +
labs(x = "Longitude", y = "Latitude") +
guides(fill = guide_colorbar(nval))
})
a
a <- Sapply(
names(tb[, 3:ncol(tb)]),
\(value) {
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(data = tb, aes(x = x, y = y, fill = factor(get(value)))) +
geom_sf(data = isl) +
scale_fill_viridis_d() +
labs(x = "Longitude", y = "Latitude") +
guides(fill = guide_colorbar(nval))
})
a$q97.5
# figures ggplot2
ggplot() +
geom_tile(data = tb, aes(x = x, y = y, fill = factor(get(value)))) +
geom_sf(data = isl) +
scale_fill_viridis_d() +
labs(x = "Longitude", y = "Latitude") +
guides(fill = nval)
a <- Sapply(
names(tb[, 3:ncol(tb)]),
\(value) {
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(data = tb, aes(x = x, y = y, fill = factor(get(value)))) +
geom_sf(data = isl) +
scale_fill_viridis_d() +
labs(x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(nval))
})
a$q97.5
a <- Sapply(
names(tb[, 3:ncol(tb)]),
\(value) {
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d() +
labs(x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(nval))
})
a$q97.5
a$init
max(sr$init)
max(tb$init)
a <- Sapply(
names(tb[, 3:ncol(tb)]),
\(value) {
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d(limits = c(1, max(tb$init))) +
labs(x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(nval))
})
a <- Sapply(
names(tb[, 3:ncol(tb)]),
\(value) {
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d(limits = 1:10)  +
labs(x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(nval))
})
a <- Sapply(
names(tb[, 3:ncol(tb)]),
\(value) {
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d(limits = factor(1:max(tb$init)))  +
labs(x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(nval))
})
a$q02.5
a$q50.0
a$q97.5
table(is.na(tb$q02.5))
table(is.na(tb$q50.0))
table(is.na(tb$q50.0))
table(is.na(tb$q97.5))
a <- Sapply(
names(tb[, 3:ncol(tb)]),
\(value) {
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d(limits = factor(0:max(tb$init)))  +
labs(x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(nval))
})
a$q02.5
sr <- rl[[nsr]]
nsr <- names(rl)[[1]]
nsr
# nsr <- names(rl)[[1]]
sr <- rl[[nsr]]
plots_isl_bsr <- Sapply(
names(tb[, 3:ncol(tb)]),
\(value) {
nval <- switch(
value,
init = "Richesse\nspécifique\n(modélisée)",
q02.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 2.5%)",
q50.0 = "Richesse\nspécifique\n(ré-échantillonnée\nMédiane)",
q97.5 = "Richesse\nspécifique\n(ré-échantillonnée\nQuantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d(limits = factor(0:max(tb$init)))  +
labs(x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(nval))
})
nval <- switch(
value,
init = "Modélisations",
q02.5 = "Ré-échantillonnage (quantile 2.5%)",
q50.0 = "Ré-échantillonnage (médiane)",
q97.5 = "Ré-échantillonnage (quantile 97.5%)"
)
plots_isl_bsr <- Sapply(
names(tb[, 3:ncol(tb)]),
\(value) {
nval <- switch(
value,
init  = "Modélisations",
q02.5 = "Ré-échantillonnage (quantile 2.5%)",
q50.0 = "Ré-échantillonnage (médiane)",
q97.5 = "Ré-échantillonnage (quantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d(limits = factor(0:max(tb$init)))  +
labs(main = nval, x = "Longitude", y = "Latitude") +
guides(fill = guide_legend("Richesse\nspécifique"))
})
plots_isl_bsr$init
x11()
plots_isl_bsr$init | (
(plots_isl_bsr$q02.5 / plots_isl_bsr$q50.0 / plots_isl_bsr$q97.5) +
plot_layout(guides = "collect")
)
names(tb[, 3:ncol(tb)])
value <- names(tb[, 3:ncol(tb)])[2]
value
nval <- switch(
value,
init  = "Modélisations",
q02.5 = "Ré-échantillonnage (quantile 2.5%)",
q50.0 = "Ré-échantillonnage (médiane)",
q97.5 = "Ré-échantillonnage (quantile 97.5%)"
)
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d(limits = factor(0:max(tb$init)))  +
labs(main = nval, x = "Longitude", y = "Latitude") +
guides(fill = guide_legend("Richesse\nspécifique")) +
theme_map()
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d(limits = factor(0:max(tb$init)))  +
labs(main = nval, x = "Longitude", y = "Latitude") +
# guides(fill = guide_legend("Richesse\nspécifique")) +
theme_map() + theme(legend.position = "none")
value
theme_map() +
theme(legend.position = "none")
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d(limits = factor(0:max(tb$init)))  +
labs(main = nval, x = "Longitude", y = "Latitude") +
if (value == "init") {
guides(fill = guide_legend("Richesse\nspécifique"))
} +
else {
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d(limits = factor(0:max(tb$init)))  +
labs(main = nval, x = "Longitude", y = "Latitude") +
if (value == "init") {
guides(fill = guide_legend("Richesse\nspécifique"))
} +
if (value != "init") {
theme_map() +
theme(legend.position = "none")
}
value != "init"
# figures ggplot2
ggplot() +
geom_tile(
data = tb, aes(x = x, y = y, fill = factor(ceiling(get(value))))
) +
geom_sf(data = isl) +
scale_fill_viridis_d(limits = factor(0:max(tb$init)))  +
labs(main = nval, x = "Longitude", y = "Latitude") +
if (value == "init") {
guides(fill = guide_legend("Richesse\nspécifique"))
} +
if (value != "init") {
theme_map()
}
value != "init"
# 3 # Dans l'onglet "<> Code" du repository créé sur GitHub, copier le lien
#     https et le coller dans le premier argument de la fonction ci-dessous
usethis::create_from_github(
"https://github.com/iGregMan/organic_matter_sepetiba.git",
# Destdir : Dossier dans lequel on veut que le nouveau projet (lié au repo)
# soit copié
destdir = "/home/borea/Documents/mosceco/r_projects/MOSCECO_miscellanous/"
)
Sys.unsetenv("GITHUB_PAT")
Sys.getenv("GITHUB_PAT")
# 3 # Dans l'onglet "<> Code" du repository créé sur GitHub, copier le lien
#     https et le coller dans le premier argument de la fonction ci-dessous
usethis::create_from_github(
"https://github.com/iGregMan/organic_matter_sepetiba.git",
# Destdir : Dossier dans lequel on veut que le nouveau projet (lié au repo)
# soit copié
destdir = "/home/borea/Documents/mosceco/r_projects/MOSCECO_miscellanous/"
)
# 1 # Création d'un token pour assurer la connexion entre le projet R local
#     et le repository sur GitHub.
usethis::create_github_token()
# Il faut copier le mot de passe proposé par la fenêtre ouverte après la
# commande ci-dessus dans la fonction :
gitcreds::gitcreds_set()
# 3 # Dans l'onglet "<> Code" du repository créé sur GitHub, copier le lien
#     https et le coller dans le premier argument de la fonction ci-dessous
usethis::create_from_github(
"https://github.com/iGregMan/organic_matter_sepetiba.git",
# Destdir : Dossier dans lequel on veut que le nouveau projet (lié au repo)
# soit copié
destdir = "/home/borea/Documents/mosceco/r_projects/MOSCECO_miscellanous/"
)
